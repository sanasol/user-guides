{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Guides Home","text":""},{"location":"#hello-what","title":"Hello~! What?!","text":"<p>Welcome to User Guides, the community driven guidebook for rAthena. This is a place where you can find guides on how to install, configure, and use rAthena. If you have any questions, feel free to ask in the rAthena Forums or our Discord server.</p>"},{"location":"#why-should-i-use-this","title":"Why Should I Use This?","text":"<p>This area of rAthena has been created by the community, for the community. If you have a guide you would like to share with the community, you can submit a pull request to the rAthena User-Guides Repository on GitHub. Due to the nature of how Github Wiki's work (and their access requirements for modifying them), we have decided to move our guides to a repository instead. This will allow us to have more control over the content and have a more streamlined process for submitting and reviewing guides. We hope you enjoy this new format, and we look forward to seeing your contributions!</p>"},{"location":"#what-about-the-old-guides","title":"What About The Old Guides?","text":"<p>Guides that are currently located on the rA Wiki will slowly migrate over to here. If you are looking for a guide that is not yet on this site, you can find it on the rAthena Wiki.</p> <p>There are a multitude of guides available on the forums, too, though many are extremely out-of-date and contain links to dead resources. Their authors may no longer be on the scene, which makes keeping them up-to-date a difficult task. This is why we encourage users to now make their guides available here, where they can be kept up-to-date and easily accessibleby everyone.</p>"},{"location":"#how-do-i","title":"How Do I?...","text":""},{"location":"#how-do-i-use-this","title":"How Do I Use This?","text":"<p>This guidebook is split into several sections for ease-of-use. Simply click around and follow links to where you need to go, or try searching for what you need using the search bar at the top of the page.</p>"},{"location":"#how-do-i-contribute","title":"How Do I Contribute?","text":"<p>If you have a guide you would like to share with the community, you can submit a pull request to the rAthena User-Guides Repository on GitHub. Have a look at our CONTRIBUTING.md file for an in-depth process.</p> <p>If you are unfamiliar with Markdown, you can use StackEdit to write your guide in Markdown, or use the GitHub Markdown Editor to preview your guide as you write it.</p>"},{"location":"#how-do-i-get-help","title":"How Do I Get Help?","text":"<p>If you have any questions about these guides, or feel that any of them need clarifying, feel free to shoot a message into the <code>#user-guides</code> channel on our Discord server.</p>"},{"location":"#how-do-i-use-these-guides-offline","title":"How Do I Use These Guides Offline?","text":"<p>You sure can! Download this package from GitHub, and you will have a copy of all the guides available for offline use. You can also clone the repository using Git, if you prefer.</p>"},{"location":"installing/","title":"General","text":""},{"location":"installing/#operating-system","title":"Operating System","text":"<ul> <li>CentOS</li> <li>Ubuntu</li> <li>Debian</li> <li>FreeBSD</li> <li>Windows</li> </ul> <p>Or are you just looking for the MySQL Installation guide?</p>"},{"location":"installing/#optional-clone-information","title":"Optional Clone Information","text":"<p>If you want to have your own forked version but still get updates from the main rAthena repository</p> <ul> <li>Fork this repository to your GitHub account</li> <li> <p>List the current configured remote repository for your fork:</p> <pre><code>git remote -v\n</code></pre> </li> <li> <p>Specify a new remote upstream repository that will be synced with your fork:</p> <pre><code>git remote add upstream https://github.com/rathena/rathena.git\n</code></pre> </li> <li> <p>Verify the new upstream repository you've specified for your fork:</p> <pre><code>git remote -v\n</code></pre> </li> <li> <p>You should see the main rAthena repository as well as your forked repository</p> </li> <li> <p>Now, when you want to get updates from rAthena, simply do:</p> <pre><code>git pull upstream master\n</code></pre> </li> <li> <p>Remember that rAthena falls under GNU GPLv3.</p> </li> </ul>"},{"location":"Installing/Debian/","title":"Debian","text":"<p>This guide covers how to install rAthena on Debian 10. For earlier versions of Debian you may need to alter the list of required packages. Older versions will not be covered in this guide.</p> <p>Code that you should run in your console/SSH application is <code>written like this</code>.</p> <p>This guide covers the installation via CLI and does not include instructions for installing a desktop environment for use with a VNC server.</p>"},{"location":"Installing/Debian/#pre-requisites","title":"Pre-Requisites","text":""},{"location":"Installing/Debian/#in-general","title":"In General","text":"<ul> <li>A basic understanding of Linux based Operating Systems.</li> <li>A basic understanding of the SSH tool Putty.</li> <li>A basic understanding of MySQL (or RDBMS in general).</li> <li>A basic understanding of when the root system user should be used, and when you should use a standard user shell.</li> <li>A basic understanding that \"if at first you don't succeed, search the forums\" will be your saving-grace in the event of errors.</li> </ul>"},{"location":"Installing/Debian/#debian-10","title":"Debian 10","text":"<p>You should ensure that your system is up-to-date by first: <code>apt-get update</code></p>"},{"location":"Installing/Debian/#installing-requirements","title":"Installing Requirements","text":"<p>We need the following applications to compile rAthena on Debian 10:</p> <pre><code>apt-get install git make libmariadb-dev libmariadbclient-dev libmariadbclient-dev-compat gcc g++ zlib1g-dev libpcre3-dev\n</code></pre> <p>You can install the above applications, and any following applications as root, then we'll switch to a standard user later on in the guide.</p> <p>If you don't feel comfortable editing files in Vim, you should install nano:</p> <pre><code>apt-get install -y nano\n</code></pre>"},{"location":"Installing/Debian/#mysql","title":"MySQL","text":"<p>For the installation instructions of MySQL, please see the relevant installation page.</p>"},{"location":"Installing/Debian/#the-code-repository","title":"The Code Repository","text":"<p>rAthena uses git for revision control, and hosts the git repository on Github.</p>"},{"location":"Installing/Debian/#cloning","title":"Cloning","text":"<p>You can obtain the latest version of rAthena by typing the following command. This will place rAthena in a folder called rAthena in your home directory, but you are free to change it to whatever you like:</p> <pre><code>git clone https://github.com/rathena/rathena.git ~/rAthena\n</code></pre>"},{"location":"Installing/Debian/#updating","title":"Updating","text":"<p>To pull the latest updates for rAthena you can do the following:</p> <pre><code>git pull\n</code></pre>"},{"location":"Installing/Debian/#compile-the-code","title":"Compile The Code","text":"<p>There are several steps you will need to do now in order to run rAthena. You first need to run the \"configure script\" to ensure everything is working as it should, and to build necessary make-files.</p> <pre><code>./configure\n</code></pre> <p>The next command is not essential every time you compile, but it helps to ensure caches are removed when compiling.</p> <pre><code>make clean\n</code></pre> <p>And then finally, we're going to build the server's code.</p> <pre><code>make server\n</code></pre> <p>Potentially, you may need to <code>chmod</code> your server binaries to make them \"executable\".</p> <pre><code>chmod a+x login-server &amp;&amp; chmod a+x char-server &amp;&amp; chmod a+x map-server &amp;&amp; chmod a+x web-server\n</code></pre>"},{"location":"Installing/Debian/#recompile-the-code","title":"Recompile The Code","text":"<p>Recompiling is the same as compiling. You can throw the code into a one-liner, if you like.</p> <pre><code>./configure &amp;&amp; make clean &amp;&amp; make server\n</code></pre>"},{"location":"Installing/Debian/#starting-rathena","title":"Starting rAthena","text":"<p>The provided method of running rAthena will work perfectly fine, but this author's personal preference is shown below as an alternative method.</p>"},{"location":"Installing/Debian/#provided-method","title":"Provided Method","text":"<p>Use the following commands * To Start:</p> <pre><code>`./athena-start start`\n</code></pre> <ul> <li> <p>To Stop:</p> <p><code>./athena-start stop</code></p> </li> <li> <p>To Restart:</p> <p><code>./athena-start restart</code></p> </li> </ul> <p>If you receive an error similar to the following:</p> <pre><code>-bash: ./athena-start: /bin/sh^M: bad interpreter\n</code></pre> <p>You can install dos2unix with <code>apt-get install dos2unix</code> and then run <code>dos2unix athena-start</code>.</p> <p>You will now be able to use <code>./athena-start start</code> after <code>chmod a+x athena-start</code>.</p>"},{"location":"Installing/Debian/#alternative-method","title":"Alternative Method","text":"<p>Firstly, install <code>screen</code>:</p> <pre><code>apt-get install -y screen\n</code></pre> <p>You can then keep all your separate consoles running in the background, and call them forward individually whenever you like.</p> <p>First, create the sessions:</p> <pre><code>screen -dmS login\nscreen -dmS char\nscreen -dmS map\nscreen -dmS web\n</code></pre> <p>Then you can connect to each one individually like so:</p> <pre><code>screen -r login\n</code></pre> <p>When you are inside the session, <code>cd</code> to your rAthena folder and start the login-server, e.g. <code>cd ~/rAthena &amp;&amp; ./login-server</code>. This should now start the login-server. To detach from the session while keeping the login-server running, you will need to hold down the <code>Ctrl</code> key on your keyboard and then press the <code>A</code> and <code>D</code> keys at the same time. Then, do the same to the other servers. If you want to terminate any of your servers, you will need to resume the session (<code>-r</code>) and then <code>Ctrl</code> + <code>C</code>.</p> <p>To make sure your sessions are still running, you can <code>screen -ls</code> which will output something similar to:</p> <pre><code>[athenauser@vps-ba60c6aa ~]$ screen -ls\nThere are screens on:\n        32121.login      (Detached)\n        4146.web         (Detached)\n        4115.map         (Detached)\n        4088.char        (Detached)\n4 Sockets in /var/run/screen/S-athenauser.\n</code></pre>"},{"location":"Installing/Debian/#connections","title":"Connections","text":"<p>If you've just started your servers and get some errors, don't worry, it's because you haven't configured them yet.</p> <p>We have a handy guide here that will talk you through what you need to change in order to get your servers up and running successfully.</p>"}]}